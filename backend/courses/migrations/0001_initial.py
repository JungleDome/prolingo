# Generated by Django 5.2.6 on 2025-09-07 09:40

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Question",
            fields=[
                ("question_id", models.AutoField(primary_key=True, serialize=False)),
                ("question_text", models.TextField()),
                (
                    "question_type",
                    models.CharField(
                        choices=[
                            ("mcq", "Multiple Choice"),
                            ("short", "Short Answer"),
                            ("coding", "Coding"),
                        ],
                        max_length=20,
                    ),
                ),
            ],
            options={
                "ordering": ["question_id"],
            },
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                ("course_id", models.AutoField(primary_key=True, serialize=False)),
                ("course_name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "created_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="courses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_date"],
            },
        ),
        migrations.CreateModel(
            name="Chapter",
            fields=[
                ("chapter_id", models.AutoField(primary_key=True, serialize=False)),
                ("chapter_title", models.CharField(max_length=255)),
                ("chapter_order", models.PositiveIntegerField()),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chapters",
                        to="courses.course",
                    ),
                ),
            ],
            options={
                "ordering": ["chapter_order"],
                "unique_together": {("course", "chapter_order")},
            },
        ),
        migrations.CreateModel(
            name="Option",
            fields=[
                ("option_id", models.AutoField(primary_key=True, serialize=False)),
                ("option_text", models.CharField(max_length=500)),
                ("is_correct", models.BooleanField(default=False)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="options",
                        to="courses.question",
                    ),
                ),
            ],
            options={
                "ordering": ["option_id"],
            },
        ),
        migrations.CreateModel(
            name="Test",
            fields=[
                ("test_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "test_type",
                    models.CharField(
                        choices=[
                            ("quiz", "Quiz"),
                            ("coding", "Coding"),
                            ("objective", "Objective"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_repeatable", models.BooleanField(default=False)),
                (
                    "structure",
                    models.CharField(
                        choices=[
                            ("objective", "Objective"),
                            ("no-repeat", "No repeat"),
                            ("custom", "Custom"),
                        ],
                        default="objective",
                        max_length=20,
                    ),
                ),
                (
                    "chapter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tests",
                        to="courses.chapter",
                    ),
                ),
            ],
            options={
                "ordering": ["test_id"],
            },
        ),
        migrations.AddField(
            model_name="question",
            name="test",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="questions",
                to="courses.test",
            ),
        ),
        migrations.CreateModel(
            name="UserTestResult",
            fields=[
                ("result_id", models.AutoField(primary_key=True, serialize=False)),
                ("score", models.DecimalField(decimal_places=2, max_digits=6)),
                (
                    "attempt_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "test",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="results",
                        to="courses.test",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="test_results",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-attempt_date"],
            },
        ),
    ]
