# Generated by Django 5.2.6 on 2025-09-24 16:52

from django.conf import settings
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("courses", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Achievement",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("target_xp_value", models.PositiveIntegerField(blank=True, null=True)),
                ("target_streak_value", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "target_completed_test",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="achievement_targets",
                        to="courses.test",
                    ),
                ),
                (
                    "reward_type",
                    models.CharField(
                        choices=[("xp", "XP"), ("energy", "Energy"), ("badge", "Badge")],
                        max_length=10,
                    ),
                ),
                ("reward_amount", models.PositiveIntegerField(blank=True, null=True)),
                ("reward_content", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "verbose_name": "Achievement",
                "verbose_name_plural": "Achievements",
            },
        ),
        migrations.CreateModel(
            name="UserGameInfo",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("xp_value", models.PositiveIntegerField(default=0)),
                ("energy_value", models.PositiveIntegerField(default=0)),
                ("energy_last_updated_date", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="game_info",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Game Info",
                "verbose_name_plural": "User Game Infos",
            },
        ),
        migrations.CreateModel(
            name="DailyStreak",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("daily_streak_date", models.DateField()),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="daily_streaks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Daily Streak",
                "verbose_name_plural": "Daily Streaks",
                "ordering": ["-daily_streak_date"],
                "unique_together": {("user", "daily_streak_date")},
            },
        ),
        migrations.CreateModel(
            name="UserClaimedAchievement",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("claimed_date", models.DateTimeField(auto_now_add=True)),
                (
                    "achievement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="claims",
                        to="gamification.achievement",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="claimed_achievements",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Claimed Achievement",
                "verbose_name_plural": "User Claimed Achievements",
                "ordering": ["-claimed_date"],
                "unique_together": {("user", "achievement")},
            },
        ),
    ]
